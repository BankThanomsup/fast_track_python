# 1. INHERITANCE (‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î) üß¨
# =============================================================================
# ‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏ó‡∏µ‡πà 1: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á
# 
# üìù ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥:
# - ‡∏™‡∏£‡πâ‡∏≤‡∏á Base Class ‡∏ä‡∏∑‡πà‡∏≠ Animal ‡∏°‡∏µ properties: name, age, color
# - ‡∏™‡∏£‡πâ‡∏≤‡∏á method eat(), sleep(), get_info()
# - ‡∏™‡∏£‡πâ‡∏≤‡∏á Child Classes: Dog, Cat, Bird ‡∏ó‡∏µ‡πà‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏à‡∏≤‡∏Å Animal
# - ‡πÅ‡∏ï‡πà‡∏•‡∏∞ Child Class ‡∏°‡∏µ method ‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á:
#   * Dog: bark(), fetch()
#   * Cat: meow(), climb()
#   * Bird: fly(), sing()
# - ‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ override method speak() ‡∏Ç‡∏≠‡∏á parent ‡πÑ‡∏î‡πâ

#Base Class
class Animal:
    def __init__(self,name,age,color):
        self.name = name
        self.age = age
        self.color = color
        
    def eat(self):
        """‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏Å‡∏¥‡∏ô"""
        return f"{self.name} ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£"
    def sleep(self):
        """‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ô‡∏≠‡∏ô"""
        return(f"{self.name} ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≠‡∏ô")
    def get_info(self):
        """‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå"""
        return(f"‡∏ä‡∏∑‡πà‡∏≠: {self.name} ,‡∏≠‡∏≤‡∏¢‡∏∏: {self.age} ,‡∏™‡∏µ: {self.color}")
    def speak(self):
        """‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå"""
        return f"{self.name} ‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á"
    
# Child Class: Dog       
class Dog(Animal):
    def __init__(self,name,age,color,breed="‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"):
        super().__init__(name,age,color)
        self.breed = breed
    def bark(self):
        return(f"{self.name} ‡πÄ‡∏´‡πà‡∏≤‡∏î‡∏±‡∏á‡πÜ: ‡∏ß‡∏±‡∏ü ‡∏ß‡∏±‡∏ü!")
    def spark(self):
        return(f"{self.name} ‡πÄ‡∏´‡πà‡∏≤: ‡πÇ‡∏Æ‡πà‡∏á ‡πÇ‡∏Æ‡πà‡∏á!")
    def fetch(self):
        return(f"{self.name} ‡∏ß‡∏¥‡πà‡∏á‡πÑ‡∏õ‡πÄ‡∏≠‡∏≤‡∏•‡∏π‡∏Å‡∏ö‡∏≠‡∏•‡∏°‡∏≤")
    def get_info(self):
        """Override ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏≤‡∏°‡∏≤
        Returns:
            str: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        """
        return super().get_info() + f", ‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå: {self.breed}"
        
class Cat(Animal):
    def __init__(self, name, age, color,indoor=True):
        super().__init__(name, age, color)
        self.indoor = indoor
    
    def speak(self):
        return f"{self.name} ‡∏£‡πâ‡∏≠‡∏á: ‡πÄ‡∏´‡∏°‡∏µ‡∏¢‡∏ß ‡πÄ‡∏´‡∏°‡∏µ‡∏¢‡∏ßüê±!"
    def meow(self):
        return f"{self.name} ‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á: ‡πÄ‡∏´‡∏°‡∏µ‡∏¢‡∏ß‡∏ß‡∏ß‡∏ß‡πÄ‡∏´‡∏°‡∏µ‡∏¢‡∏ßüê±üéµ!"
    def climb(self):
        return f"{self.name} ‡∏õ‡∏µ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡πà‡∏ßüê±üå≥!"
    def get_info(self):
        """
        Override ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏°‡∏ß

        Returns:
            str: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏°‡∏ß‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        """
        location = "‡∏ö‡πâ‡∏≤‡∏ô" if self.indoor else "‡∏ô‡∏≠‡∏Å‡∏ö‡πâ‡∏≤‡∏ô"
        return super().get_info() + f", ‡∏≠‡∏¢‡∏π‡πà: {location}"     
        
class Bird(Animal):
    def __init__(self, name, age, color, can_fly=True):
        super().__init__(name, age, color)
        self.can_fly = can_fly
    
    def speak(self):
        return f"{self.name} ‡∏£‡πâ‡∏≠‡∏á: ‡∏à‡∏¥‡πä‡∏ö ‡∏à‡∏¥‡πä‡∏ö! üê¶"
    
    def fly(self):
        """‡∏ô‡∏Å‡∏ö‡∏¥‡∏ô"""
        if self.can_fly:
            return f"{self.name} ‡∏ö‡∏¥‡∏ô‡∏™‡∏π‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏ü‡πâ‡∏≤ ‚úàÔ∏è"
        else:
            return f"{self.name} ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏¥‡∏ô‡πÑ‡∏î‡πâ"
    
    def sing(self):
        """‡∏ô‡∏Å‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á"""
        return f"{self.name} ‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏û‡πÄ‡∏£‡∏≤‡∏∞: ‡∏•‡∏≤ ‡∏•‡∏≤ ‡∏•‡∏≤~ üé∂"
    
    def get_info(self):
        """Override ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏Å"""
        flight_status = "‡∏ö‡∏¥‡∏ô‡πÑ‡∏î‡πâ" if self.can_fly else "‡∏ö‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ"
        return super().get_info() + f", {flight_status}"    
# =============================================================================
# ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
# =============================================================================
if __name__ == "__main__":
    
    print("=" * 50)
    print(" ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ö‡∏ó‡∏≠‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ")
    print("=" * 50)
    
    #‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    dog = Dog("‡∏ö‡∏±‡∏î‡∏î‡∏µ‡πâ","2‡∏õ‡∏µ","‡∏™‡∏µ‡∏î‡∏≥")
    cat = Cat("‡∏°‡∏¥‡∏ß", 2, "‡∏Ç‡∏≤‡∏ß", indoor=True)
    bird = Bird("‡∏õ‡∏µ‡∏Å‡πÅ‡∏Å‡πâ‡∏ß", 1, "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß", can_fly=True)
    animals = [dog, cat, bird]
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö method ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    for animal in animals:
        print(f"\nüìã {animal.get_info()}")
        print(f"üó£Ô∏è  {animal.speak()}")
        print(f"üçΩÔ∏è  {animal.eat()}")
        print(f"üò¥ {animal.sleep()}")
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö method ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏±‡∏ï‡∏ß‡πå
        if isinstance(animal, Dog):
            print(f"üêï {animal.bark()}")
            print(f"üéæ {animal.fetch()}")
        elif isinstance(animal, Cat):
            print(f"üê± {animal.meow()}")
            print(f"üå≥ {animal.climb()}")
        elif isinstance(animal, Bird):
            print(f"‚úàÔ∏è  {animal.fly()}")
            print(f"üé∂ {animal.sing()}")
        