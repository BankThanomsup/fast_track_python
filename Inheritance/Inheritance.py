# р╣Вр╕Ир╕Чр╕вр╣Мр╕Эр╕╢р╕Бр╕Эр╕Щ Advanced OOP Concepts - р╕гр╕░р╕Ър╕Ър╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕кр╕▒р╕Хр╕зр╣Мр╣Ар╕ер╕╡р╣Йр╕вр╕Зр╕Вр╕▒р╣Йр╕Щр╕кр╕╣р╕З
# =============================================================================
# р╕Хр╣Ир╕нр╕вр╕нр╕Фр╕Ир╕▓р╕Б Pet Manager р╣Ар╕Юр╕╖р╣Ир╕нр╕Эр╕╢р╕Б: Inheritance, Polymorphism, Encapsulation, Abstract Classes
# =============================================================================

# 1. INHERITANCE (р╕Бр╕▓р╕гр╕кр╕╖р╕Ър╕Чр╕нр╕Ф) ЁЯзм
# =============================================================================
# р╣Вр╕Ир╕Чр╕вр╣Мр╕Чр╕╡р╣И 1: р╕кр╕гр╣Йр╕▓р╕Зр╕гр╕░р╕Ър╕Ър╕Бр╕▓р╕гр╕кр╕╖р╕Ър╕Чр╕нр╕Фр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕▒р╕Хр╕зр╣Мр╣Ар╕ер╕╡р╣Йр╕вр╕З
# 
# ЁЯУЭ р╕кр╕┤р╣Ир╕Зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Чр╕│:
# - р╕кр╕гр╣Йр╕▓р╕З Base Class р╕Кр╕╖р╣Ир╕н Animal р╕бр╕╡ properties: name, age, color
# - р╕кр╕гр╣Йр╕▓р╕З method eat(), sleep(), get_info()
# - р╕кр╕гр╣Йр╕▓р╕З Child Classes: Dog, Cat, Bird р╕Чр╕╡р╣Ир╕кр╕╖р╕Ър╕Чр╕нр╕Фр╕Ир╕▓р╕Б Animal
# - р╣Бр╕Хр╣Ир╕ер╕░ Child Class р╕бр╕╡ method р╕Юр╕┤р╣Ар╕ир╕йр╕Вр╕нр╕Зр╕Хр╕▒р╕зр╣Ар╕нр╕З:
#   * Dog: bark(), fetch()
#   * Cat: meow(), climb()
#   * Bird: fly(), sing()
# - р╕Чр╕╕р╕Бр╕Хр╕▒р╕зр╕Хр╣Йр╕нр╕Зр╕кр╕▓р╕бр╕▓р╕гр╕Ц override method speak() р╕Вр╕нр╕З parent р╣Др╕Фр╣Й

# 2. POLYMORPHISM (р╕Юр╕лр╕╕р╕гр╕╣р╕Ы) ЁЯОн
# =============================================================================
# р╣Вр╕Ир╕Чр╕вр╣Мр╕Чр╕╡р╣И 2: р╕кр╕гр╣Йр╕▓р╕Зр╕гр╕░р╕Ър╕Ър╕Чр╕╡р╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕кр╕▒р╕Хр╕зр╣Мр╕лр╕ер╕▓р╕вр╕Кр╕Щр╕┤р╕Фр╣Гр╕Щр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╣Ар╕Фр╕╡р╕вр╕зр╕Бр╕▒р╕Щ
#
# ЁЯУЭ р╕кр╕┤р╣Ир╕Зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Чр╕│:
# - р╕кр╕гр╣Йр╕▓р╕З method make_sound() р╕Чр╕╡р╣Ир╕Чр╕│р╕Зр╕▓р╕Щр╕Хр╣Ир╕▓р╕Зр╕Бр╕▒р╕Щр╣Гр╕Щр╣Бр╕Хр╣Ир╕ер╕░ class
# - р╕кр╕гр╣Йр╕▓р╕З function animal_concert() р╕Чр╕╡р╣Ир╕гр╕▒р╕Ъ list р╕Вр╕нр╕Зр╕кр╕▒р╕Хр╕зр╣М
# - р╣Гр╕лр╣Йр╕кр╕▒р╕Хр╕зр╣Мр╣Бр╕Хр╣Ир╕ер╕░р╕Хр╕▒р╕зр╕гр╣Йр╕нр╕Зр╣Ар╕Юр╕ер╕З (р╣Ар╕гр╕╡р╕вр╕Б make_sound()) р╕Хр╕▓р╕бр╕ер╕▒р╕Бр╕йр╕Ур╕░р╕Вр╕нр╕Зр╕Хр╕▒р╕зр╣Ар╕нр╕З
# - р╕Чр╕Фр╕кр╕нр╕Ър╕Фр╣Йр╕зр╕вр╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕▒р╕Хр╕зр╣Мр╕лр╕ер╕▓р╕вр╕Хр╕▒р╕з р╣Бр╕ер╣Йр╕зр╣Гр╕кр╣Ир╣Гр╕Щ list р╣Ар╕Фр╕╡р╕вр╕зр╕Бр╕▒р╕Щ

# 3. ENCAPSULATION (р╕Бр╕▓р╕гр╕лр╣Ир╕нр╕лр╕╕р╣Йр╕б) ЁЯФТ
# =============================================================================
# р╣Вр╕Ир╕Чр╕вр╣Мр╕Чр╕╡р╣И 3: р╕Ыр╕Бр╕Ыр╣Йр╕нр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕│р╕Др╕▒р╕Нр╕Вр╕нр╕Зр╕кр╕▒р╕Хр╕зр╣Мр╣Ар╕ер╕╡р╣Йр╕вр╕З
#
# ЁЯУЭ р╕кр╕┤р╣Ир╕Зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Чр╕│:
# - р╕кр╕гр╣Йр╕▓р╕З class Pet р╕Чр╕╡р╣Ир╕бр╕╡ private attributes: __health, __happiness, __energy
# - р╕кр╕гр╣Йр╕▓р╕З getter methods: get_health(), get_happiness(), get_energy()
# - р╕кр╕гр╣Йр╕▓р╕З setter methods р╕Чр╕╡р╣Ир╕бр╕╡р╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ:
#   * set_health(value) - р╕Хр╣Йр╕нр╕Зр╕нр╕вр╕╣р╣Ир╕гр╕░р╕лр╕зр╣Ир╕▓р╕З 0-100
#   * set_happiness(value) - р╕Хр╣Йр╕нр╕Зр╕нр╕вр╕╣р╣Ир╕гр╕░р╕лр╕зр╣Ир╕▓р╕З 0-100
#   * set_energy(value) - р╕Хр╣Йр╕нр╕Зр╕нр╕вр╕╣р╣Ир╕гр╕░р╕лр╕зр╣Ир╕▓р╕З 0-100
# - р╕кр╕гр╣Йр╕▓р╕З methods: feed() р╣Ар╕Юр╕┤р╣Ир╕б health, play() р╣Ар╕Юр╕┤р╣Ир╕б happiness, rest() р╣Ар╕Юр╕┤р╣Ир╕б energy
# - р╕кр╕гр╣Йр╕▓р╕З method get_status() р╣Бр╕кр╕Фр╕Зр╕кр╕Цр╕▓р╕Щр╕░р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф

# 4. ABSTRACT CLASSES (р╕Др╕ер╕▓р╕кр╕Щр╕▓р╕бр╕Шр╕гр╕гр╕б) ЁЯОи
# =============================================================================
# р╣Вр╕Ир╕Чр╕вр╣Мр╕Чр╕╡р╣И 4: р╕кр╕гр╣Йр╕▓р╕Зр╣Бр╕бр╣Ир╣Бр╕Ър╕Ър╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕▒р╕Хр╕зр╣Мр╣Ар╕ер╕╡р╣Йр╕вр╕Зр╕Чр╕╡р╣Ир╕Ър╕▒р╕Зр╕Др╕▒р╕Ър╣Гр╕лр╣Й implement methods
#
# ЁЯУЭ р╕кр╕┤р╣Ир╕Зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Чр╕│:
# - import ABC р╣Бр╕ер╕░ abstractmethod р╕Ир╕▓р╕Б abc module
# - р╕кр╕гр╣Йр╕▓р╕З abstract class PetInterface р╕Чр╕╡р╣Ир╕бр╕╡:
#   * Abstract methods: make_sound(), move(), care_instruction()
#   * Concrete method: introduce() р╕Чр╕╡р╣Ир╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ
# - р╕кр╕гр╣Йр╕▓р╕З concrete classes: HouseCat, GuardDog, TalkingBird
# - р╣Бр╕Хр╣Ир╕ер╕░ class р╕Хр╣Йр╕нр╕З implement abstract methods р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
# - р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕З object р╣Бр╕ер╕░р╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Й methods

# =============================================================================
# ЁЯОп р╣Ар╕Ыр╣Йр╕▓р╕лр╕бр╕▓р╕вр╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Й:
# 1. р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Бр╕▓р╕гр╣Гр╕Кр╣Й super() р╣Гр╕Щ inheritance
# 2. р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Др╕зр╕▓р╕бр╣Бр╕Хр╕Бр╕Хр╣Ир╕▓р╕Зр╕гр╕░р╕лр╕зр╣Ир╕▓р╕З method overriding р╣Бр╕ер╕░ method overloading
# 3. р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Бр╕▓р╕гр╣Гр╕Кр╣Й __, _, public, protected, private
# 4. р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Бр╕▓р╕гр╣Гр╕Кр╣Й @property р╣Бр╕ер╕░ @setter
# 5. р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щр╕Вр╕нр╕З abstract classes р╣Бр╕ер╕░ interfaces
# =============================================================================

print("ЁЯЪА р╕Юр╕гр╣Йр╕нр╕бр╣Ар╕гр╕┤р╣Ир╕бр╕Эр╕╢р╕Б Advanced OOP р╣Бр╕ер╣Йр╕з!")
print("ЁЯУЛ р╣Ар╕гр╕┤р╣Ир╕бр╕Ир╕▓р╕Бр╕Вр╣Йр╕н 1: Inheritance р╕Бр╣Ир╕нр╕Щр╕Щр╕░р╕Др╕гр╕▒р╕Ъ")
print("-" * 50)